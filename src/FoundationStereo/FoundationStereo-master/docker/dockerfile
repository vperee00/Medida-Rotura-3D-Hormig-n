FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu20.04

ENV TZ=US/Pacific
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update --fix-missing && \
    apt-get install -y libgtk2.0-dev && \
    apt-get install -y wget bzip2 ca-certificates curl git vim tmux g++ gcc build-essential cmake checkinstall gfortran libjpeg8-dev libtiff5-dev pkg-config yasm libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libv4l-dev qt5-default libgtk2.0-dev libtbb-dev libatlas-base-dev libfaac-dev libmp3lame-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 v4l-utils libprotobuf-dev protobuf-compiler libgoogle-glog-dev libgflags-dev libgphoto2-dev libhdf5-dev doxygen libflann-dev libboost-all-dev proj-data libproj-dev libyaml-cpp-dev cmake-curses-gui libzmq3-dev freeglut3-dev


RUN apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends apt-utils git gdb pkg-config libgtk2.0-dev libusb-1.0-0-dev wget software-properties-common &&\
    apt-get install -y wget ca-certificates curl git vim tmux build-essential cmake checkinstall gfortran pkg-config yasm libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgtk2.0-dev libtbb-dev libatlas-base-dev libfaac-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev libopencore-amrwb-dev x264 libprotobuf-dev protobuf-compiler libgoogle-glog-dev libgflags-dev libgphoto2-dev libhdf5-dev doxygen libflann-dev   libboost-all-dev libblas-dev liblapack-dev proj-data libproj-dev libccd-dev libglew-dev  zlib1g-dev libtinyxml2-dev p7zip-full p7zip-rar xvfb rsync libnoise-dev libcgal-dev libassimp-dev iputils-ping parallel htop net-tools ffmpeg libturbojpeg-dev rclone openexr


SHELL ["/bin/bash", "--login", "-c"]

RUN cd / && wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /miniconda.sh && \
    /bin/bash /miniconda.sh -b -p /opt/conda &&\
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&\
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc &&\
    /bin/bash -c "source ~/.bashrc" && \
    /opt/conda/bin/conda update -n base -c defaults conda -y &&\
    /opt/conda/bin/conda create -n my python=3.9


ENV PATH $PATH:/opt/conda/envs/my/bin
ENV RCLONE_CONFIG /rclone.conf

RUN conda init bash &&\
    echo "conda activate my" >> ~/.bashrc &&\
    conda activate my &&\
    pip install torch==2.4.0 torchvision==0.19.0 --index-url https://download.pytorch.org/whl/cu124


ENV OPENCV_IO_ENABLE_OPENEXR=1

RUN conda activate my &&\
    pip install scikit-image omegaconf opencv-contrib-python  imgaug Ninja timm albumentations nodejs jupyterlab scipy joblib scikit-learn ruamel.yaml trimesh pyyaml imageio open3d transformations einops gdown  &&\
    pip install -U git+https://github.com/lilohuang/PyTurboJPEG.git &&\
    pip install flash-attn --no-build-isolation &&\
    pip install xformers==0.0.28.post1 --index-url https://download.pytorch.org/whl/cu124
ENV SHELL=/bin/bash
RUN ln -sf /bin/bash /bin/sh


SHELL ["/bin/bash", "-c", "source ~/.bashrc && conda activate my"]
